"""
Django settings for mypika project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from datetime import timedelta
#from logging import config


import os
from pathlib import Path
#import dj_database_url



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n(x1te02!vy!@^oc!2n8au1wn0+n2yjb=ot1$x_y9@ckn!rv!o'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True

# Allow all hosts for now, or specify your Render domain
ALLOWED_HOSTS = [
    "pika-app.onrender.com",
    "localhost",
    "127.0.0.1",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    #add stuffs here
    #"channels", #for websockets
    'pika.apps.PikaConfig',   # explicit & safe # Our Custom App
    'rest_framework',  # For building APIs
    'rest_framework.authtoken',  # For token authentication
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mypika.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mypika.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

#Replace the SQLite DATABASES configuration with PostgreSQL
'''DATABASES = {
    'default': dj_database_url.config(
        default=os.environ.get("DATABASE_URL", "sqlite:///db.sqlite3"),
        conn_max_age=600
    )
}'''


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

USE_L10N = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media files (user uploaded files) ################
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Custom user model
AUTH_USER_MODEL = 'pika.User'


# REST Framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        #'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}



#DRF SIMPLE JWT SETTINGS
SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=300),   # 24 hours expiry
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),    # refresh valid for 1 day
    "ROTATE_REFRESH_TOKENS": False,                  # optional: issue new refresh on use
    "BLACKLIST_AFTER_ROTATION": True,               # optional: blacklist old refresh
    "AUTH_HEADER_TYPES": ("Bearer",),
}



# Email settings (for password reset and notifications)
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # For Development Prints emails to console
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # For Production Prints emails to console
# OR (for real emails)

EMAIL_HOST = os.getenv('EMAIL_HOST') # Your SMTP server
EMAIL_PORT = os.getenv('EMAIL_PORT')
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD') #Generate your 16 digits password later
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')
EMAIL_BACKEND = os.getenv("EMAIL_BACKEND", "django.core.mail.backends.console.EmailBackend")

AUTHENTICATION_BACKENDS = [
    'pika.backends.EmailBackend',  # Replace 'myapp' with your app name # Your custom backend
    'django.contrib.auth.backends.ModelBackend',  # Fallback to default
]


# Used config from python "decouple" to pull out values from the .env file
# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = os.getenv("SECRET_KEY")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG", "False")
PAYSTACK_TEST_SECRET_KEY = os.getenv("PAYSTACK_SECRET_KEY")

# CELERY BROKER URL FOR REDIS (TO RUN CRON JOBS) (for production)
CELERY_BROKER_URL = "redis://127.0.0.1:6379/0" #"redis://red-d33an58dl3ps738nc0n0:6379"  #"redis://127.0.0.1:6379/0"   # Redis DB 0 For production, provision a Redis instance for render or upstash
CELERY_RESULT_BACKEND = "redis://127.0.0.1:6379/0" #"redis://red-d33an58dl3ps738nc0n0:6379"   #"redis://127.0.0.1:6379/0"


# SECURITY HEADERS (for production)
CSRF_TRUSTED_ORIGINS = ["https://pika-app.onrender.com"]

