# Generated by Django 5.2.7 on 2025-10-16 21:59

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminChats',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('user_id', models.CharField(max_length=100)),
                ('fcm_token', models.CharField(blank=True, max_length=400)),
                ('full_name', models.CharField(blank=True, max_length=400)),
                ('type', models.CharField(max_length=400)),
                ('last_message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=150)),
                ('category', models.CharField(blank=True, max_length=150)),
                ('type', models.CharField(max_length=150)),
                ('description', models.JSONField(blank=True)),
                ('device_colors', models.JSONField(blank=True, default=list)),
                ('image_list', models.JSONField(blank=True, default=list)),
                ('quantity', models.IntegerField(blank=True)),
                ('is_sweet_deal', models.BooleanField(default=False)),
                ('in_stock', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('phone_number', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_code', models.CharField(blank=True, max_length=255, null=True)),
                ('reg_method', models.CharField(blank=True, max_length=255)),
                ('referral_code', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=150)),
                ('is_verified', models.BooleanField(default=False)),
                ('enable_notification', models.BooleanField(default=False)),
                ('kyc_status', models.CharField(default='pending', max_length=255)),
                ('kyc_doc_name', models.CharField(blank=True, max_length=255)),
                ('kyc_document', models.FileField(blank=True, null=True, upload_to='kyc_documents/')),
                ('fcm_token', models.CharField(blank=True, max_length=255, null=True)),
                ('has_pin', models.BooleanField(default=False)),
                ('transfer_pin', models.IntegerField(blank=True, null=True)),
                ('panic_transfer_pin', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('referral_count', models.IntegerField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BankDetail',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('bank_name', models.CharField(max_length=150)),
                ('currency', models.CharField(default='NGN', max_length=150)),
                ('type', models.CharField(default='nuban', max_length=150)),
                ('account_name', models.CharField(max_length=150)),
                ('account_number', models.CharField(max_length=50)),
                ('bank_code', models.CharField(blank=True, max_length=50, null=True)),
                ('recipient_code', models.CharField(blank=True, max_length=50, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='related_bank_details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CartOrder',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('category', models.CharField(max_length=150)),
                ('type', models.CharField(max_length=150)),
                ('description', models.JSONField(blank=True)),
                ('device_colors', models.JSONField(blank=True, default=list)),
                ('image_list', models.JSONField(blank=True, default=list)),
                ('quantity', models.IntegerField()),
                ('in_stock', models.BooleanField(default=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=20)),
                ('is_sweet_deal', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CryptoWallet',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(blank=True, max_length=20)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=100)),
                ('private_key', models.CharField(blank=True, max_length=400)),
                ('public_key', models.CharField(blank=True, max_length=400)),
                ('seed_phrase', models.CharField(blank=True, max_length=800)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crypto_wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GadgetOrder',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('items', models.JSONField(blank=True)),
                ('payment_type', models.CharField(max_length=150)),
                ('delivery_type', models.CharField(max_length=150)),
                ('delivery_address', models.CharField(blank=True, max_length=255)),
                ('delivery_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_status', models.CharField(default='received', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gadget_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('type', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_msgs', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_msgs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('title', models.CharField(max_length=150)),
                ('type', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShipmentOrder',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('extras', models.JSONField()),
                ('shipment_type', models.CharField(default='ship', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipment_orders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed'), ('REVERSED', 'Reversed')], default='PENDING', max_length=20)),
                ('transaction_type', models.CharField(choices=[('gadget-purchase', 'GADGET-PURCHASE'), ('top-up', 'TOP-UP'), ('withdrawal', 'WITHDRAWAL'), ('crypto-sale', 'CRYPTO-SALE'), ('crypto-purchase', 'CRYPTO-PURCHASE'), ('giftcard-purchase', 'GIFTCARD-PURCHASE'), ('giftcard-redeem', 'GIFTCARD-REDEEM')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=30)),
                ('crypto_name', models.CharField(blank=True, max_length=255)),
                ('crypto_wallet_address', models.CharField(blank=True, max_length=400)),
                ('reason', models.TextField(blank=True, null=True)),
                ('transaction_reference', models.CharField(blank=True, max_length=400)),
                ('is_reported', models.BooleanField(default=False)),
                ('report_reason', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recipient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_transactions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=18)),
                ('currency', models.CharField(default='NGN', max_length=3)),
                ('is_frozen', models.BooleanField(default=False)),
                ('pika_coin', models.IntegerField(blank=True, null=True)),
                ('bvn', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fiat_wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
